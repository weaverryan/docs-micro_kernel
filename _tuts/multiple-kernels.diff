diff --git a/app/ApiKernel.php b/app/ApiKernel.php
new file mode 100644
index 0000000..e86885c
--- /dev/null
+++ b/app/ApiKernel.php
@@ -0,0 +1,42 @@
+<?php
+
+use Symfony\Bundle\FrameworkBundle\Kernel\MicroKernelTrait;
+use Symfony\Component\Config\Loader\LoaderInterface;
+use Symfony\Component\DependencyInjection\ContainerBuilder;
+use Symfony\Component\HttpKernel\Kernel;
+use Symfony\Component\Routing\RouteCollectionBuilder;
+
+class ApiKernel extends Kernel
+{
+    use MicroKernelTrait;
+
+    public function registerBundles()
+    {
+        $bundles = array(
+            new Symfony\Bundle\FrameworkBundle\FrameworkBundle(),
+            new Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle()
+        );
+
+        return $bundles;
+    }
+
+    protected function configureContainer(ContainerBuilder $c, LoaderInterface $loader)
+    {
+        $loader->load(__DIR__.'/config/config.yml');
+        $loader->load(__DIR__.'/config/api.yml');
+    }
+
+    protected function configureRoutes(RouteCollectionBuilder $routes)
+    {
+        $routes->import(
+            __DIR__.'/../src/Api/Controller/',
+            '/api',
+            'annotation'
+        );
+    }
+
+    public function getCacheDir()
+    {
+        return __DIR__.'/../var/cache/api/'.$this->getEnvironment();
+    }
+}
diff --git a/app/AppKernel.php b/app/AppKernel.php
deleted file mode 100644
index 8ca5b22..0000000
--- a/app/AppKernel.php
+++ /dev/null
@@ -1,56 +0,0 @@
-<?php
-
-use Symfony\Bundle\FrameworkBundle\Kernel\MicroKernelTrait;
-use Symfony\Component\Config\Loader\LoaderInterface;
-use Symfony\Component\DependencyInjection\ContainerBuilder;
-use Symfony\Component\HttpKernel\Kernel;
-use Symfony\Component\Routing\RouteCollectionBuilder;
-use Doctrine\Common\Annotations\AnnotationRegistry;
-
-// require Composer's autoloader
-$loader = require __DIR__.'/../vendor/autoload.php';
-// auto-load annotations
-AnnotationRegistry::registerLoader(array($loader, 'loadClass'));
-
-class AppKernel extends Kernel
-{
-    use MicroKernelTrait;
-
-    public function registerBundles()
-    {
-        $bundles = array(
-            new Symfony\Bundle\FrameworkBundle\FrameworkBundle(),
-            new Symfony\Bundle\TwigBundle\TwigBundle(),
-            new Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle()
-        );
-
-        if ($this->getEnvironment() == 'dev') {
-            $bundles[] = new Symfony\Bundle\WebProfilerBundle\WebProfilerBundle();
-        }
-
-        return $bundles;
-    }
-
-    protected function configureContainer(ContainerBuilder $c, LoaderInterface $loader)
-    {
-        $loader->load(__DIR__.'/config/config.yml');
-
-        if (isset($this->bundles['WebProfilerBundle'])) {
-            $c->loadFromExtension('web_profiler', array(
-                'toolbar' => true,
-                'intercept_redirects' => false,
-            ));
-        }
-    }
-
-    protected function configureRoutes(RouteCollectionBuilder $routes)
-    {
-        if (isset($this->bundles['WebProfilerBundle'])) {
-            $routes->import('@WebProfilerBundle/Resources/config/routing/wdt.xml', '/_wdt');
-            $routes->import('@WebProfilerBundle/Resources/config/routing/profiler.xml', '/_profiler');
-        }
-
-        // load the annotation routes
-        $routes->import(__DIR__.'/../src/App/Controller/', '/', 'annotation');
-    }
-}
diff --git a/app/WebKernel.php b/app/WebKernel.php
new file mode 100644
index 0000000..de37377
--- /dev/null
+++ b/app/WebKernel.php
@@ -0,0 +1,55 @@
+<?php
+
+use Symfony\Bundle\FrameworkBundle\Kernel\MicroKernelTrait;
+use Symfony\Component\Config\Loader\LoaderInterface;
+use Symfony\Component\DependencyInjection\ContainerBuilder;
+use Symfony\Component\HttpKernel\Kernel;
+use Symfony\Component\Routing\RouteCollectionBuilder;
+
+class WebKernel extends Kernel
+{
+    use MicroKernelTrait;
+
+    public function registerBundles()
+    {
+        $bundles = array(
+            new Symfony\Bundle\FrameworkBundle\FrameworkBundle(),
+            new Symfony\Bundle\TwigBundle\TwigBundle(),
+            new Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle()
+        );
+
+        if ($this->getEnvironment() == 'dev') {
+            $bundles[] = new Symfony\Bundle\WebProfilerBundle\WebProfilerBundle();
+        }
+
+        return $bundles;
+    }
+
+    protected function configureContainer(ContainerBuilder $c, LoaderInterface $loader)
+    {
+        $loader->load(__DIR__.'/config/config.yml');
+
+        if (isset($this->bundles['WebProfilerBundle'])) {
+            $c->loadFromExtension('web_profiler', array(
+                'toolbar' => true,
+                'intercept_redirects' => false,
+            ));
+        }
+    }
+
+    protected function configureRoutes(RouteCollectionBuilder $routes)
+    {
+        if (isset($this->bundles['WebProfilerBundle'])) {
+            $routes->import('@WebProfilerBundle/Resources/config/routing/wdt.xml', '/_wdt');
+            $routes->import('@WebProfilerBundle/Resources/config/routing/profiler.xml', '/_profiler');
+        }
+
+        // load the annotation routes
+        $routes->import(__DIR__.'/../src/App/Controller/', '/', 'annotation');
+    }
+
+    public function getCacheDir()
+    {
+        return __DIR__.'/../var/cache/web/'.$this->getEnvironment();
+    }
+}
diff --git a/app/autoload.php b/app/autoload.php
new file mode 100644
index 0000000..be8c99b
--- /dev/null
+++ b/app/autoload.php
@@ -0,0 +1,8 @@
+<?php
+
+use Doctrine\Common\Annotations\AnnotationRegistry;
+
+// require Composer's autoloader
+$loader = require __DIR__.'/../vendor/autoload.php';
+// auto-load annotations
+AnnotationRegistry::registerLoader(array($loader, 'loadClass'));
diff --git a/app/config/api.yml b/app/config/api.yml
new file mode 100644
index 0000000..e69de29
diff --git a/app/config/config.yml b/app/config/config.yml
index 6d32cc0..438c461 100644
--- a/app/config/config.yml
+++ b/app/config/config.yml
@@ -1,5 +1,3 @@
 framework:
     secret: S0ME_SECRET
-    templating:
-        engines: ['twig']
-    profiler: { only_exceptions: false }
\ No newline at end of file
+    profiler: { only_exceptions: false }
diff --git a/app/config/web.yml b/app/config/web.yml
new file mode 100644
index 0000000..f02e27d
--- /dev/null
+++ b/app/config/web.yml
@@ -0,0 +1,3 @@
+framework:
+    templating:
+        engines: ['twig']
diff --git a/src/Api/Controller/ApiController.php b/src/Api/Controller/ApiController.php
new file mode 100644
index 0000000..91de582
--- /dev/null
+++ b/src/Api/Controller/ApiController.php
@@ -0,0 +1,17 @@
+<?php
+
+namespace Api\Controller;
+
+use Symfony\Component\HttpFoundation\JsonResponse;
+use Symfony\Component\Routing\Annotation\Route;
+
+class ApiController
+{
+    /**
+     * @Route("/json")
+     */
+    public function jsonAction()
+    {
+        return new JsonResponse(['kernel' => 'api']);
+    }
+}
\ No newline at end of file
diff --git a/web/index.php b/web/index.php
index b66bcb6..9cabb85 100644
--- a/web/index.php
+++ b/web/index.php
@@ -2,10 +2,18 @@
 
 use Symfony\Component\HttpFoundation\Request;
 
-require __DIR__.'/../app/AppKernel.php';
+require __DIR__.'/../app/autoload.php';
 
-$kernel = new AppKernel('dev', true);
 $request = Request::createFromGlobals();
+
+if (strpos($request->getPathInfo(), '/api') === 0) {
+    require __DIR__.'/../app/ApiKernel.php';
+    $kernel = new ApiKernel('dev', true);
+} else {
+    require __DIR__.'/../app/WebKernel.php';
+    $kernel = new WebKernel('dev', true);
+}
+
 $response = $kernel->handle($request);
 $response->send();
 $kernel->terminate($request, $response);
\ No newline at end of file
